type Query {
    weatherStationsList: [WeatherStation]
    # weatherStation(station_id: String): WeatherStation
    weatherStation(station_id: String, , type: String, limit: Int, from: Float, to: Float): WeatherStation
    measurementsList(station_id: String, type: String, limit: Int, from: Float, to: Float) : [Measurement]
}

type Mutation {
    # addWeatherStation(name: String!, externalId:String!, altitude: Int, longitude: Float, latitude: Float): WeatherStation
    addWeatherStation(weatherStationRequest: WeatherStationRequest): WeatherStation
}

input WeatherStationRequest {
    externalId: String!
    name: String!
    longitude: Float
    latitude: Float
    altitude: Int
}

type WeatherStation {
    id: String
    name: String
    longitude: Float
    latitude: Float
    altitude: Int
    rank: Int
    measurementList: [Measurement]
}

type Measurement {
    type: String
    date: String
    station_id: String
    temp : Temp
}

type Temp {
    max: Float
    min: Float
    average: Float
    weight: Int
}